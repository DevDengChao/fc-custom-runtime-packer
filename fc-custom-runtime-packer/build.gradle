plugins {
    id 'java'
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.11.0'

    //region publish to maven local for integrate development testing
    id 'maven-publish'
    //endregion
}

group 'dev.dengchao'
version "${VERSION}"

repositories {
    maven { url "https://maven.aliyun.com/repository/central" }
    maven { url "https://maven.aliyun.com/repository/gradle-plugin" }
    mavenCentral()
}

java {
    sourceCompatibility(JavaVersion.VERSION_1_8)
    targetCompatibility(JavaVersion.VERSION_1_8)
}

dependencies {
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter
    testImplementation('org.junit.jupiter:junit-jupiter:5.6.2')

    // https://mvnrepository.com/artifact/org.jetbrains/annotations
    implementation group: 'org.jetbrains', name: 'annotations', version: '19.0.0'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-compress
    implementation group: 'org.apache.commons', name: 'commons-compress', version: '1.20'

//    Incompatible with java-gradle-plugin
//    compileOnly "org.projectlombok:lombok:1.16.16"
//    annotationProcessor "org.projectlombok:lombok:1.16.16"

}

test {
    useJUnitPlatform()
}

gradlePlugin {
    //noinspection GroovyAssignabilityCheck
    plugins {
        fcCustomRuntimePacker {
            //noinspection GroovyAssignabilityCheck
            id = 'dev.dengchao.fc-custom-runtime-packer'
            //noinspection GroovyAssignabilityCheck
            implementationClass = 'dev.dengchao.FcCustomRuntimePackerPlugin'
        }
    }
}

pluginBundle {
    website = 'https://github.com/XieEDeHeiShou/fc-custom-runtime-packer'
    vcsUrl = 'https://github.com/XieEDeHeiShou/fc-custom-runtime-packer'
    description = 'Compress bootstrap files together with your boot.jar into a function compute\'s zip'
    tags = ['spring-boot']

    plugins {
        fcCustomRuntimePacker {
            id = 'dev.dengchao.fc-custom-runtime-packer'
            displayName = 'Fc custom runtime packer plugin'
        }
    }
}

//region publish to maven local for integrate development testing
publishing {
    repositories {
        mavenLocal()
    }
}
//endregion

tasks.findByName("publishToMavenLocal").dependsOn('test').doLast {
    exec { commandLine "./integrate-test.sh" }
}
